components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Product:
      type: object
      properties:
        _id:
          type: string
          description: Id autogenerado de Mongo
          unique: true
          readOnly: true
        title:
          type: string
          description: Título del producto
          required: true
        description:
          type: string
          description: Descripción del producto
          required: true
        code:
          type: string
          description: Código único del producto
          required: true
          unique: true
        price:
          type: number
          description: Precio del producto
          required: true
        status:
          type: boolean
          description: Disponibilidad del producto
          default: true
        stock:
          type: integer
          description: Cantidad disponible del producto
          format: int32
        category:
          type: string
          description: Categoría del producto
          required: true
        thumbnails:
          type: array
          description: Imagenes del producto (URL)
          items:
            type: string
          default: []
        owner:
          type: string
          description: Dueño del producto
          default: admin
          readOnly: true

paths:
  /api/products/:
    get:
      summary: Obtiene todos los productos y los renderiza en una vista
      tags:
        - Products
      parameters:
        - name: limit
          in: query
          description: Número de productos a obtener
          required: false
          schema:
            type: integer
            format: int32
        - name: page
          in: query
          description: Página de productos a obtener
          required: false
          schema:
            type: integer
            format: int32
        
      responses:
        "200":
          description: Los productos fueron obtenidos satisfactoriamente de la base de datos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
              examples:
                products:
                  summary: Ejemplo de respuesta exitosa
                  value:
                    - _id: "60d21bbf6947g3c5a9426d68"
                      title: "Producto 1"
                      description: "Descripción del producto 1"
                      code: "P1"
                      price: 100.0
                      status: true
                      stock: 10
                      category: "Categoría 1"
                      thumbnails: ["http://example.com/image1.jpg"]
                      owner: "admin"
                    - _id: "60d21bbf6947g3c5a9426d69"
                      title: "Producto 2"
                      description: "Descripción del producto 2"
                      code: "P2"
                      price: 200.0
                      status: false
                      stock: 0
                      category: "Categoría 2"
                      thumbnails: ["http://example.com/image2.jpg"]
                      owner: "admin"
        "400":
          description: Error de solicitud incorrecta, puede ser debido a parámetros inválidos
        "500":
          description: Error del servidor al tratar de obtener los productos
    post:
      security:
        - BearerAuth: []
      summary: Crea un nuevo producto - Requiere rol premium o admin
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
            examples:
              newProduct:
                summary: Ejemplo de solicitud para crear un nuevo producto
                value:
                  title: "Producto 3"
                  description: "Descripción del producto 3"
                  code: "P3"
                  price: 300.0
                  status: true
                  stock: 30
                  category: "Categoría 3"
                  thumbnails: ["http://example.com/image3.jpg"]

      responses:
        "201":
          description: El producto fue creado satisfactoriamente
        "400":
          description: Error de solicitud incorrecta, puede ser debido a parámetros inválidos o producto ya existente
        "401":
          description: Error de autorización, debe proporcionar un token valido y tener el rol indicado
        "500":
          description: Error del servidor al tratar de crear el producto

  /api/products/{pid}:
    get:
      summary: Obtiene un producto por ID
      tags:
        - Products
      parameters:
        - name: pid
          in: path
          description: ID del producto a obtener
          required: true
          schema:
            type: string
          examples:
            validId:
              summary: Ejemplo de un ID de producto válido
              value: "60d21bbf6947g3c5a9426d68"
      responses:
        "200":
          description: El producto fue obtenido satisfactoriamente de la base de datos
        "400":
          description: Error de solicitud incorrecta, puede ser debido a un ID de producto inválido
        "500":
          description: Error del servidor al tratar de obtener el producto
    put:
      security:
        - BearerAuth: []
      summary: Actualiza un producto existente - Requiere rol admin
      tags:
        - Products
      parameters:
        - name: pid
          in: path
          description: ID del producto a actualizar
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
            examples:
              updateProduct:
                summary: Ejemplo de solicitud para actualizar un producto existente
                value:
                  title: "Producto actualizado"
                  description: "Descripción actualizada del producto"
                  code: "P1"
                  price: 150.0
                  status: false
                  stock: 5
                  category: "Categoría actualizada"
                  thumbnails: ["http://example.com/image_updated.jpg"]
      responses:
        "200":
          description: El producto fue actualizado satisfactoriamente
        "400":
          description: Error de solicitud incorrecta, puede ser debido a parámetros inválidos
        "401":
          description: Error de autorización, debe proporcionar un token valido y tener el rol indicado
        "404":
          description: Producto no encontrado
        "500":
          description: Error del servidor al tratar de actualizar el producto
    delete:
      security:
        - BearerAuth: []
      summary: Elimina un producto existente - Requiere rol premium o admin
      tags:
        - Products
      parameters:
        - name: pid
          in: path
          description: ID del producto a eliminar
          required: true
          schema:
            type: string
          examples:
            validId:
              summary: Ejemplo de un ID de producto válido para eliminar
              value: "60d21bbf6947g3c5a9426d68"
      responses:
        "200":
          description: El producto fue eliminado satisfactoriamente
        "400":
          description: No tiene permisos para realizar esta acción
        "401":
          description: Error de autorización, debe proporcionar un token valido y tener el rol indicado
        "404":
          description: Producto no encontrado
        "500":
          description: Error del servidor al tratar de eliminar el producto
    